# This workflow runs basic test for Vault Secrets Operator

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:

  test:
    runs-on: ubuntu-latest
    env:
      KIND_CLUSTER_NAME: vault-secrets-operator
      
    steps:
      - uses: actions/checkout@v3

      - name: Create K8s Kind Cluster
        uses: helm/kind-action@fa81e57adff234b2908110485695db0f181f3c67 # v1.7.0
        with:
          version: v0.19.0
          cluster_name: ${{ env.KIND_CLUSTER_NAME }}
          config: infra/kind/config.yaml
          node_image: kindest/node:v1.26.4

      - name: Install Vault and the operator
        run: |
          helm repo add hashicorp https://helm.releases.hashicorp.com
          helm repo update
          helm search repo hashicorp/vault
          helm install vault hashicorp/vault -n vault \
          --create-namespace --values vault/vault-server-values.yaml
          helm install vault-secrets-operator hashicorp/vault-secrets-operator \
          --version 0.1.0 -n vault-secrets-operator-system \
          --create-namespace --values vault/vault-operator-values.yaml

      - name: Setup Vault 
        run: |
          kubectl exec --stdin=true --tty=true vault-0 -n vault -- vault auth enable kubernetes && \
          vault write auth/kubernetes/config kubernetes_host="https://$KUBERNETES_PORT_443_TCP_ADDR:443" && \
          vault secrets enable -path=kvv2 kv-v2 && \
          vault secrets enable -path=kv kv && \
          vault policy write dev - <<EOF \
          path "kv/*" { \
            capabilities = ["read"] \
          } \
          path "kvv2/*" { \
            capabilities = ["read"] \
          } \
          EOF && \
          vault write auth/kubernetes/role/role1 \
          bound_service_account_names=default \
          bound_service_account_namespaces=app \
          policies=dev \
          audience=vault \
          ttl=24h && \
          vault kv put kv/webapp/config username="static-user" password="static-password" && \
          vault kv put kvv2/webapp/config username="static-user-kvv2" password="static-password-kvv2"

      - name: Test Static secrets
        run: |
          kubectl create ns app
          kubectl apply -f vault/static-secrets/.
          if [ "$(kubectl get secret secretkv -n app -o json | jq -r .data._raw | base64 -D)" = "static-password" ]; then echo "Static kv secret works!"; else exit 1; fi
          if [ "$(kubectl get secret secretkvv2 -n app -o json | jq -r .data._raw | base64 -D)" = "static-password" ]; then echo "Static kvv2 secret works!"; else exit 1; fi
